{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"chalk\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"inquirer\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/wrapNativeSuper\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///./src/tools/constants.js","webpack:///./src/tools/console/layout.js","webpack:///./src/tools/console/table.js","webpack:///./src/tools/files/renderFilesInfo.js","webpack:///./src/tools/searchPatterns.js","webpack:///./src/tools/paths.js","webpack:///./src/tools/files/getFilesInfo.js","webpack:///./src/tools/files/validateFiles.js","webpack:///./src/tools/console/colorByBoolean.js","webpack:///./src/tools/console/logo.js","webpack:///./src/tools/menu.js","webpack:///./src/tools/writeFile.js","webpack:///./src/tools/files/updateFilesInfo.js","webpack:///./src/updateSwitchCases.js","webpack:///./src/App.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","CONSTANTS","UPDATE","PROJECT_VERSION_VARIANT","BUILD_NUMBER_VARIANT","PLATFORM","ALL","ANDROID","IOS","PACKAGE","LayoutLine","str","width","fill","color","a","outStr","count","currentChar","concat","length","replace","renderTable","m1","m2","m3","m4","m5","h1","undefined","chalk","yellowBright","h2","greenBright","h3","cyanBright","r1","whiteBright","r2","v11","v12","v13","v22","v23","gray","renderFilesInfo","fileInfo","header","packageVersion","versions","Package","projectVersion","iOSVersion","androidVersion","table","String","buildNumber","console","log","SEARCH_PATTERNS","buildVersion","CURRENT_DIRECTORY_PATH","process","cwd","PATHS","resolve","readFile","inputPath","readFileSync","getNativeVersion","inputPattern","sourceFile","RegExp","exec","Number","getFilesInfo","files","JSON","parse","version","tryFilesExist","isExit","meta","keys","forEach","isFileExist","existsSync","path","isFound","redBright","input","Logo","magentaBright","packageFile","askAboutType","prompt","type","message","choices","answers","askAboutPlatform","updateFor","askVersionText","answer","consolePrefix","writeFile","filePath","data","writeFileSync","error","updatePackageVersion","filesInfo","newVersion","packagePath","newPackage","newPackageFile","stringify","updateNativeVersion","sourceFileData","platform","searchPattern","newProjectVersion","newBuildNumber","sourceFilePath","toUpperCase","fileData","all","start","found","end","updateAndroidVersion","updateIosVersion","updateProjectVersions","updateBuildNumbers","updateSwitchCases","App"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"chalk\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"inquirer\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/wrapNativeSuper\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","const CONSTANTS = {\n    UPDATE: {\n        // ALL: 'All',\n        // PACKAGE_VERSION_VARIANT: 'Package Version',\n        PROJECT_VERSION_VARIANT: 'Project Version',\n        BUILD_NUMBER_VARIANT: 'Build Number',\n    },\n    PLATFORM: {\n        ALL: 'All',\n        ANDROID: 'Android',\n        IOS: 'iOS',\n        PACKAGE: 'Package',\n    },\n};\n\nexport {\n    CONSTANTS,\n};\n","function LayoutLine(str = '', width = 15, fill = ' ', color = a => a) {\n    let outStr = '';\n    let count = 0;\n\n    while (count < width) {\n        const currentChar = str[count] || fill;\n        outStr = outStr.concat(currentChar);\n        count += 1;\n    }\n\n    if (str.length > width) outStr = outStr.replace(/.$/, '…');\n\n    return color(outStr);\n}\n\nexport {\n    LayoutLine,\n};\n","import chalk from 'chalk';\nimport { LayoutLine } from './layout';\n\nconst renderTable = ({ m1 = '', m2 = '', m3 = '', m4 = '', m5 = '' } = {}) => {\n    const width = 11;\n\n    const h1 = LayoutLine('Package', width, undefined, chalk.yellowBright);\n    const h2 = LayoutLine('Android', width, undefined, chalk.greenBright);\n    const h3 = LayoutLine('iOS', width, undefined, chalk.cyanBright);\n\n    const r1 = LayoutLine('Package Version', 16, undefined, chalk.whiteBright);\n    const r2 = LayoutLine('Build Number', 16, undefined, chalk.whiteBright);\n\n    const v11 = LayoutLine(m1, width, undefined, chalk.yellowBright);\n    const v12 = LayoutLine(m2, width, undefined, chalk.greenBright);\n    const v13 = LayoutLine(m3, width, undefined, chalk.cyanBright);\n\n    const v22 = LayoutLine(m4, width, undefined, chalk.greenBright);\n    const v23 = LayoutLine(m5, width, undefined, chalk.cyanBright);\n\n    return chalk.gray(`\n┌──────────────────┬─────────────┬─────────────┬─────────────┐\n│                  │ ${h1} │ ${h2} │ ${h3} │\n├──────────────────┼─────────────┼─────────────┼─────────────┤\n│ ${r1} │ ${v11} │ ${v12} │ ${v13} │\n├──────────────────┼─────────────┼─────────────┼─────────────┤\n│ ${r2} │ -           │ ${v22} │ ${v23} │\n└──────────────────┴─────────────┴─────────────┴─────────────┘\n`);\n};\n\nexport {\n    renderTable,\n};\n","/* eslint-disable no-console */\nimport { CONSTANTS } from '../constants';\nimport { renderTable } from '../console/table';\n\nfunction renderFilesInfo(fileInfo, header) {\n    const packageVersion = fileInfo.versions.Package.projectVersion;\n    const iOSVersion = fileInfo.versions[CONSTANTS.PLATFORM.IOS];\n    const androidVersion = fileInfo.versions[CONSTANTS.PLATFORM.ANDROID];\n\n    const table = renderTable({\n        m1: packageVersion,\n        m2: androidVersion && androidVersion.projectVersion,\n        m3: iOSVersion && iOSVersion.projectVersion,\n        m4: androidVersion && String(androidVersion.buildNumber),\n        m5: iOSVersion && String(iOSVersion.buildNumber),\n        header,\n    });\n\n    console.log(table);\n}\n\nexport {\n    renderFilesInfo,\n};\n","const androidSearchPatterns = {\n    buildVersion: /(^\\s*versionName \")(?<buildVersion>.*)(\"$)/gm,\n    buildNumber: /(^\\s*versionCode )(?<buildNumber>\\d*)($)/gm,\n};\n\nconst iosSearchPatterns = {\n    buildVersion: /(^\\s*MARKETING_VERSION = )(?<buildVersion>.*)(;$)/gm,\n    buildNumber: /(^\\s*CURRENT_PROJECT_VERSION = )(?<buildNumber>.*)(;$)/gm,\n};\n\nconst SEARCH_PATTERNS = {\n    ANDROID: androidSearchPatterns,\n    IOS: iosSearchPatterns,\n};\n\nexport {\n    SEARCH_PATTERNS,\n};\n","import { resolve } from 'path';\n\nconst CURRENT_DIRECTORY_PATH = process.cwd();\n\nconst PATHS = {\n    /** FOR DEVELOPMENT */\n    // PACKAGE: resolve(CURRENT_DIRECTORY_PATH, './src/sources/package.json'),\n    // ANDROID: resolve(CURRENT_DIRECTORY_PATH, './src/sources/build.gradle'),\n    // IOS: resolve(CURRENT_DIRECTORY_PATH, './src/sources/project.pbxproj'),\n\n    /** FOR PRODUCTION */\n    PACKAGE: resolve(CURRENT_DIRECTORY_PATH, './package.json'),\n    ANDROID: resolve(CURRENT_DIRECTORY_PATH, './android/app/build.gradle'),\n    IOS: resolve(CURRENT_DIRECTORY_PATH, './ios/enapter.xcodeproj/project.pbxproj'),\n};\n\nexport {\n    PATHS,\n};\n","import { readFileSync } from 'fs';\nimport { CONSTANTS } from '../constants';\nimport { SEARCH_PATTERNS } from '../searchPatterns';\nimport { PATHS } from '../paths';\n\nconst readFile = inputPath => readFileSync(inputPath, 'utf8');\n\nfunction getNativeVersion(inputPattern, sourceFile) {\n    const projectVersion = new RegExp(inputPattern.buildVersion).exec(sourceFile)[2];\n    const buildNumber = Number(new RegExp(inputPattern.buildNumber).exec(sourceFile)[2]);\n\n    return {\n        projectVersion,\n        buildNumber,\n    };\n}\n\nfunction getFilesInfo() {\n    const files = {\n        Package: JSON.parse(readFile(PATHS.PACKAGE)),\n        [CONSTANTS.PLATFORM.IOS]: readFile(PATHS.IOS),\n        [CONSTANTS.PLATFORM.ANDROID]: readFile(PATHS.ANDROID),\n    };\n\n    const versions = {\n        Package: {\n            projectVersion: files.Package.version,\n        },\n        [CONSTANTS.PLATFORM.IOS]: getNativeVersion(\n            SEARCH_PATTERNS.IOS, files[CONSTANTS.PLATFORM.IOS],\n        ),\n        [CONSTANTS.PLATFORM.ANDROID]: getNativeVersion(\n            SEARCH_PATTERNS.ANDROID, files[CONSTANTS.PLATFORM.ANDROID],\n        ),\n    };\n\n    return {\n        files,\n        versions,\n    };\n}\n\nexport {\n    getFilesInfo,\n};\n","import chalk from 'chalk';\nimport { existsSync } from 'fs';\n\nimport { PATHS } from '../paths';\nimport { colorByBoolean } from '../console/colorByBoolean';\n\nfunction tryFilesExist() {\n    let isExit = false;\n    const meta = {};\n\n    Object.keys(PATHS).forEach(key => {\n        const isFileExist = existsSync(PATHS[key]);\n        meta[key] = {\n            path: PATHS[key],\n            isFound: isFileExist,\n        };\n\n        if (!isFileExist) {\n            isExit = true;\n        }\n    });\n\n    if (isExit) {\n        console.log(\n            chalk.redBright('[Error] Some of files not found:\\n'),\n        );\n\n        Object.keys(PATHS).forEach(key => {\n            console.log(key);\n            console.log('– path:', meta[key].path);\n            console.log('– is found:', colorByBoolean(meta[key].isFound));\n            console.log('');\n        });\n    }\n\n    return isExit;\n}\n\nexport {\n    tryFilesExist,\n};\n","import chalk from 'chalk';\n\nfunction colorByBoolean(input) {\n    if (input) return chalk.greenBright(input);\n\n    return chalk.redBright(input);\n}\n\nexport {\n    colorByBoolean,\n};\n","import chalk from 'chalk';\nimport packageFile from '../../../package.json';\n\nconst Logo = chalk.magentaBright(`${packageFile.name} ${packageFile.version}`);\n\nexport {\n    Logo,\n};\n","import { prompt } from 'inquirer';\nimport { CONSTANTS } from './constants';\n\nasync function askAboutType() {\n    const answers = await prompt([\n        {\n            type: 'list',\n            name: 'updateFor',\n            message: 'What do you want to update?',\n            choices: [\n                CONSTANTS.UPDATE.BUILD_NUMBER_VARIANT,\n                CONSTANTS.UPDATE.PROJECT_VERSION_VARIANT,\n            ],\n        },\n    ]);\n\n    return answers;\n}\n\nasync function askAboutPlatform(updateFor) {\n    const choices = [\n        CONSTANTS.PLATFORM.ALL,\n        CONSTANTS.PLATFORM.PACKAGE,\n        CONSTANTS.PLATFORM.ANDROID,\n        CONSTANTS.PLATFORM.IOS,\n    ];\n\n    if (updateFor === CONSTANTS.UPDATE.BUILD_NUMBER_VARIANT) delete choices[1];\n\n    const answers = await prompt([\n        {\n            type: 'list',\n            name: 'platform',\n            message: 'Choose the platform:',\n            choices,\n        },\n    ]);\n\n    return answers;\n}\n\nasync function askVersionText(message) {\n    const answer = await prompt([\n        {\n            type: 'input',\n            name: 'version',\n            message,\n        },\n    ]);\n\n    return answer;\n}\n\nexport {\n    askVersionText,\n    askAboutType,\n    askAboutPlatform,\n};\n","/* eslint-disable no-console */\nimport { writeFileSync } from 'fs';\n\nconst consolePrefix = '[writeFile]';\n\nfunction writeFile(filePath, data) {\n    try {\n        writeFileSync(filePath, data);\n    } catch (error) {\n        console.log(consolePrefix, error);\n    }\n\n    // console.log(`${consolePrefix} file updated:`, filePath);\n}\n\nfunction noWriteFileMessage() {\n    console.log('NO CHANGES');\n}\n\nexport {\n    writeFile,\n    noWriteFileMessage,\n};\n","import { PATHS } from '../paths';\nimport { writeFile } from '../writeFile';\nimport { CONSTANTS } from '../constants';\nimport { SEARCH_PATTERNS } from '../searchPatterns';\n\nfunction updatePackageVersion(filesInfo, newVersion) {\n    if (!newVersion) return;\n\n    const packagePath = PATHS.PACKAGE;\n    const packageFile = filesInfo.files.Package;\n\n    const newPackage = {\n        ...packageFile,\n        version: newVersion,\n    };\n\n    const newPackageFile = JSON.stringify(newPackage, null, 2);\n\n    if (JSON.stringify(packageFile, null, 2) === newPackageFile) {\n        // noWriteFileMessage();\n        return;\n    }\n\n    writeFile(packagePath, newPackageFile);\n}\n\nfunction updateNativeVersion(\n    sourceFileData, platform, searchPattern, newProjectVersion, newBuildNumber,\n) {\n    const sourceFilePath = PATHS[platform.toUpperCase()];\n    const sourceFile = sourceFileData.files[platform];\n\n    const { projectVersion, buildNumber } = sourceFileData.versions;\n\n    let fileData = sourceFile;\n\n    if (newProjectVersion && projectVersion !== newProjectVersion) {\n        fileData = fileData.replace(searchPattern.buildVersion, (all, start, found, end) => `${start}${newProjectVersion}${end}`);\n    }\n\n    if (newBuildNumber && buildNumber !== newBuildNumber) {\n        fileData = fileData.replace(searchPattern.buildNumber, (all, start, found, end) => `${start}${newBuildNumber}${end}`);\n    }\n\n    if (sourceFile === fileData) {\n        // noWriteFileMessage();\n        return;\n    }\n\n    writeFile(sourceFilePath, fileData);\n}\n\nfunction updateAndroidVersion(sourceFileData, newProjectVersion, newBuildNumber) {\n    updateNativeVersion(\n        sourceFileData, CONSTANTS.PLATFORM.ANDROID, SEARCH_PATTERNS.ANDROID,\n        newProjectVersion, newBuildNumber,\n    );\n}\n\nfunction updateIosVersion(sourceFileData, newProjectVersion, newBuildNumber) {\n    updateNativeVersion(\n        sourceFileData, CONSTANTS.PLATFORM.IOS, SEARCH_PATTERNS.IOS,\n        newProjectVersion, newBuildNumber,\n    );\n}\n\nexport {\n    updatePackageVersion,\n    updateAndroidVersion,\n    updateIosVersion,\n};\n","/* eslint-disable default-case */\nimport { askVersionText, askAboutType, askAboutPlatform } from './tools/menu';\nimport { updatePackageVersion, updateAndroidVersion, updateIosVersion } from './tools/files/updateFilesInfo';\nimport { CONSTANTS } from './tools/constants';\n\nasync function updateProjectVersions(fileInfo, platform) {\n    const { version } = await askVersionText('Input the new Project Version:');\n\n    switch (platform) {\n    case CONSTANTS.PLATFORM.PACKAGE: {\n        updatePackageVersion(fileInfo, version);\n        break;\n    }\n    case CONSTANTS.PLATFORM.ANDROID: {\n        updateAndroidVersion(fileInfo, version);\n        break;\n    }\n    case CONSTANTS.PLATFORM.IOS: {\n        updateIosVersion(fileInfo, version);\n        break;\n    }\n    case CONSTANTS.PLATFORM.ALL: {\n        updatePackageVersion(fileInfo, version);\n        updateAndroidVersion(fileInfo, version);\n        updateIosVersion(fileInfo, version);\n        break;\n    }\n    }\n}\n\nasync function updateBuildNumbers(fileInfo, platform) {\n    const { version: buildNumber } = await askVersionText('Input the new Build Number:');\n    switch (platform) {\n    case CONSTANTS.PLATFORM.ANDROID: {\n        updateAndroidVersion(fileInfo, null, buildNumber);\n        break;\n    }\n    case CONSTANTS.PLATFORM.IOS: {\n        updateIosVersion(fileInfo, null, buildNumber);\n        break;\n    }\n    case CONSTANTS.PLATFORM.ALL: {\n        updateAndroidVersion(fileInfo, null, buildNumber);\n        updateIosVersion(fileInfo, null, buildNumber);\n        break;\n    }\n    }\n}\n\nasync function updateSwitchCases(fileInfo) {\n    const { updateFor } = await askAboutType();\n    const { platform } = await askAboutPlatform(updateFor);\n\n    switch (updateFor) {\n    case CONSTANTS.UPDATE.PROJECT_VERSION_VARIANT: {\n        await updateProjectVersions(fileInfo, platform);\n        break;\n    }\n    case CONSTANTS.UPDATE.BUILD_NUMBER_VARIANT: {\n        await updateBuildNumbers(fileInfo, platform);\n        break;\n    }\n    }\n}\n\nexport {\n    updateSwitchCases,\n};\n","import { renderFilesInfo } from './tools/files/renderFilesInfo';\nimport { getFilesInfo } from './tools/files/getFilesInfo';\nimport { tryFilesExist } from './tools/files/validateFiles';\n\nimport { Logo } from './tools/console/logo';\n\nimport { updateSwitchCases } from './updateSwitchCases';\n\nasync function App() {\n    // eslint-disable-next-line no-console\n    console.log(Logo);\n\n    const isNeedToExit = tryFilesExist();\n    if (isNeedToExit) return;\n\n    const fileInfo = getFilesInfo();\n    renderFilesInfo(fileInfo, 'Before');\n\n    await updateSwitchCases(fileInfo);\n\n    const afterFileInfo = getFilesInfo();\n    renderFilesInfo(afterFileInfo, 'After');\n}\n\nexport default App;\n","import App from './src/App';\n\nApp();\n"],"sourceRoot":""}